name: OmniQA CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  pw-ts:
    runs-on: ubuntu-latest
    env:
      BASE_URL: https://the-internet.herokuapp.com
      API_BASE_URL: https://jsonplaceholder.typicode.com
      HEADLESS: "true"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - run: |
          cd playwright-typescript
          npm ci
          npx playwright install --with-deps
          npm test
      - uses: actions/upload-artifact@v4
        with: { name: pw-ts-report, path: playwright-typescript/playwright-report }
      - uses: actions/upload-artifact@v4
        with: { name: pw-ts-artifacts, path: playwright-typescript/test-artifacts }

  pw-py:
    runs-on: ubuntu-latest
    env:
      BASE_URL: https://the-internet.herokuapp.com
      API_BASE_URL: https://jsonplaceholder.typicode.com
      HEADLESS: "true"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - run: |
          pip install -r playwright-python/requirements.txt
          python -m playwright install --with-deps
          pytest playwright-python/tests
      - uses: actions/upload-artifact@v4
        with: { name: pw-py-report, path: playwright-python/report }
      - uses: actions/upload-artifact@v4
        with: { name: pw-py-artifacts, path: playwright-python/test-artifacts }

  sel-py:
    runs-on: ubuntu-latest
    env:
      BASE_URL: https://the-internet.herokuapp.com
      API_BASE_URL: https://jsonplaceholder.typicode.com
      HEADLESS: "true"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - run: |
          pip install -r selenium-python/requirements.txt
          pytest selenium-python/tests
      - uses: actions/upload-artifact@v4
        with: { name: sel-py-report, path: selenium-python/report }

  sel-java:
    runs-on: ubuntu-latest
    env:
      BASE_URL: https://the-internet.herokuapp.com
      API_BASE_URL: https://jsonplaceholder.typicode.com
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with: { distribution: 'temurin', java-version: '17' }
      - run: mvn -f selenium-java/pom.xml -q test
      - run: |
          mkdir -p selenium-java/report
          cp -r selenium-java/target/surefire-reports selenium-java/report/
      - uses: actions/upload-artifact@v4
        with: { name: sel-java-report, path: selenium-java/report }

  jmeter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          mkdir -p performance-tests/report
          docker run --rm -v "$PWD/performance-tests":/test justb4/jmeter:5.6.3 \
            -n -t /test/login_load.jmx -l /test/results.jtl -e -o /test/report
      - uses: actions/upload-artifact@v4
        with: { name: jmeter-report, path: performance-tests/report }

  build-site:
    runs-on: ubuntu-latest
    needs: [pw-ts, pw-py, sel-py, sel-java, jmeter]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with: { path: _artifacts }
      - run: |
          rm -rf site && mkdir -p site/reports
          cp -r _artifacts/pw-ts-report           site/reports/playwright-typescript
          cp -r _artifacts/pw-ts-artifacts        site/reports/playwright-typescript-artifacts
          cp -r _artifacts/pw-py-report           site/reports/playwright-python
          cp -r _artifacts/pw-py-artifacts        site/reports/playwright-python-artifacts
          cp -r _artifacts/sel-py-report          site/reports/selenium-python
          cp -r _artifacts/sel-java-report        site/reports/selenium-java
          cp -r _artifacts/jmeter-report          site/reports/performance
          cat > site/index.html <<'HTML'
          <!doctype html><html><head>
          <meta charset="utf-8"><title>OmniQA Lab – Latest Reports</title>
          <style>body{font:16px/1.5 system-ui;margin:2rem;max-width:980px}a{display:block;margin:.5rem 0}</style>
          </head><body>
          <h1>OmniQA Lab — Latest CI Reports</h1>
          <p>Rebuilt on every push. First runs capture videos, screenshots, and traces.</p>
          <h2>UI & API Reports</h2>
          <a href="reports/playwright-typescript/index.html">Playwright (TypeScript) – HTML report</a>
          <a href="reports/playwright-typescript-artifacts/">Playwright (TypeScript) – videos/screenshots/traces</a>
          <a href="reports/playwright-python/index.html">Playwright (Python) – HTML report</a>
          <a href="reports/playwright-python-artifacts/">Playwright (Python) – videos/screenshots/traces</a>
          <a href="reports/selenium-python/index.html">Selenium (Python) – HTML report</a>
          <a href="reports/selenium-java/surefire-reports/">Selenium (Java) – Surefire reports (screenshots on failure)</a>
          <h2>API-Only</h2>
          <a href="reports/selenium-python/index.html">API (Python) – included with pytest report</a>
          <a href="reports/selenium-java/surefire-reports/">API (Java – RestAssured) – included</a>
          <h2>Performance</h2>
          <a href="reports/performance/index.html">JMeter Dashboard</a>
          <h2>Manual Tests</h2>
          <a href="../manual-tests/test-cases.md">Manual test cases (Markdown)</a>
          </body></html>
          HTML
      - uses: actions/upload-pages-artifact@v3
        with: { path: site }

  deploy:
    runs-on: ubuntu-latest
    needs: build-site
    permissions: { pages: write, id-token: write }
    environment: { name: github-pages }
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4